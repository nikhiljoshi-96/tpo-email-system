
from PIL import Image, ImageTk 
from tkinter import *
from PIL import Image, ImageTk
import sqlite3


def add_one():
    db_name = 'tpo.db'
    conn = sqlite3.connect(db_name)
    c = conn.cursor()

    master = Tk()
    
    def insert_data():
              db_rows = c.execute("INSERT INTO `user_info`(`Enrollment`,`name`, `email`, `year`, `cgpa`) VALUES ('"+e1.get()+"','"+e2.get()+"','"+e3.get()+"','"+e4.get()+"','"+e5.get()+"')")
              db_rows = c.execute("INSERT INTO `prev_result` (`enrollment_no`,`12_result`, `10_result`) VALUES ('"+e1.get()+"','"+e6.get()+"','"+e7.get()+"')")
              if db_rows:
                  Label(mainframe, text="data inserted user added").grid(row=0 , column = 1)
                  conn.commit()
                  
            

    def new_qu_pop():
              slave =Tk()
              def insert_skill():
                  print("hlo")
                  Label(newframe, text="******************************test 123********************").grid(row=0, column =1)
                  #db_rows = c.execute("INSERT INTO `qualification`(`enroll`,`quality`) VALUES (0818,php)")
                  db_rows = c.execute("INSERT INTO `qualification`(`enroll`,`quality`) VALUES ('"+e1.get()+"','"+e2.get()+"')")
	          #conn.commit()
                
              newframe = Frame(slave)
              newframe.grid(column=0,row=0, sticky=(N,W,E,S) )
              newframe.columnconfigure(0, weight = 1)
              newframe.rowconfigure(0, weight = 1)
              newframe.pack(pady = 50, padx = 100)
              qual = StringVar(slave)
              Label(newframe, text="Enter skill and insert in db").grid(row=0, column =1)
              Label(newframe, text="Enter Enrollment").grid(row=1)
              Label(newframe, text="Choose a language skill").grid(row=2)
              qe1 = Entry(newframe).grid(row=1, column=1)
              choices = { 'php','python','java','c/c++','ruby','android'}
              qual.set('php')
              popupMenu = OptionMenu(newframe, qual, *choices)
              popupMenu.grid(row = 2, column =1)
              eqtn = Button (newframe, text ="Insert in db", padx="100px", bg="#57fc25",activebackground="#3bf902",command=insert_skill).grid(row = 3,column = 1)
              slave.mainloop()
        


    mainframe = Frame(master)
    mainframe.grid(column=0,row=0, sticky=(N,W,E,S) )
    mainframe.columnconfigure(0, weight = 1)
    mainframe.rowconfigure(0, weight = 1)
    mainframe.pack(pady = 50, padx = 100)
    
    img = Image.open("1.gif")
    tkimage = ImageTk.PhotoImage(img)
    #Label(master,image=tkimage).pack(side=TOP)
    Label(mainframe, text="please insert your info").grid(row=0 , column = 1)
    Label(mainframe, text="Enrollment Number ").grid(row=1)
    Label(mainframe, text="Name").grid(row=2)
    Label(mainframe, text="Email").grid(row=3)
    Label(mainframe, text="year").grid(row=4)
    Label(mainframe, text="Current cgpa").grid(row=5)
    Label(mainframe, text="12 th percentage").grid(row=6)
    Label(mainframe, text="10 th percentage").grid(row=7)

    e1 = Entry(mainframe)
    e2 = Entry(mainframe)
    e3 = Entry(mainframe)
    e4 = Entry(mainframe)
    e5 = Entry(mainframe)
    e6 = Entry(mainframe)
    e7 = Entry(mainframe)

    e1.grid(row=1, column=1)
    e2.grid(row=2, column=1)
    e3.grid(row=3, column=1)
    e4.grid(row=4, column=1)
    e5.grid(row=5, column=1)
    e6.grid(row=6, column=1)
    e7.grid(row=7, column=1)
    sbtn = Button (mainframe, text ="Submit", padx="100px", bg="#57fc25",activebackground="#3bf902", command=insert_data).grid(row = 8,column = 1)
    qbtn = Button (mainframe, text ="insert a quality of student", padx="100px", bg="#57fc25",activebackground="#3bf902",command=new_qu_pop).grid(row = 9,column = 1)

    master.mainloop( )

    


def give_require():
    from PIL import Image, ImageTk
    db_name = 'tpo.db'
    conn = sqlite3.connect(db_name)
    c = conn.cursor()
    mail_list=[]

    master = Tk()

    def Send_mail(mail):
            import smtplib
            x=smtplib.SMTP('smtp.gmail.com',587)
            x.ehlo()
            x.starttls()
            x.login('archanajoshilic@gmail.com','9329644010')
            msg=e2.get()+" \n Requirement as below : \n language Required : "+tkvar.get()
            x.sendmail('archanajoshilic@gmail.com',mail,'Subject: {}\n\n{}'.format(e1.get(), msg))
            print("Message sended sussefully")
            x.quit()
            

    def get_variables():
            del mail_list[:]
            mylist.delete(0,END)
            db_rows = c.execute("SELECT email FROM user_info WHERE cgpa >= "+e5.get()+" AND Enrollment IN (SELECT enroll FROM qualification WHERE quality = '"+tkvar.get()+"' AND enroll IN (SELECT enrollment_no FROM prev_result WHERE `12_result` >="+e4.get()+" AND `10_result` >= "+e3.get()+") )")
            data = c.fetchall()
            for row in data:
                    mail_list.append(row[0])
            conn.commit()
            mylist.insert(END, " total student found on database according to your requirement : ( "+str(len(mail_list))+" )")
            for line in range(0,len(mail_list)):
                    mylist.insert(END, " email ("+str(line)+"): "+ str(mail_list[line]))
	
    def send_them_all():
            for i in range(0,len(mail_list)):
                    Send_mail(mail_list[i])
                    Label(mainframe,text="message send").grid(row=0,column=1)
                    mainloop()
                    
            

                     

    mainframe = Frame(master)
    mainframe.grid(column=0,row=0, sticky=(N,W,E,S) )
    mainframe.columnconfigure(0, weight = 1)
    mainframe.rowconfigure(0, weight = 1)
    mainframe.pack(pady = 50, padx = 100)


    sub = StringVar(master)
    msg = StringVar(master) 
    re_10 = StringVar(master)
    re_12 = StringVar(master)
    cgpa = StringVar(master)
    tkvar = StringVar(master)

    img = Image.open("1.gif")
    tkimage = ImageTk.PhotoImage(img)
            
    #Label(master,image=tkimage).pack(side=TOP)
    Label(mainframe, text="TPO Email Sending System").grid(row=0 , column = 1)
    Label(mainframe, text="Subject of mail ").grid(row=1)
    Label(mainframe, text="Message : content of mail").grid(row=2)
    Label(mainframe, text="min 10TH Percentage").grid(row=3)
    Label(mainframe, text="min 12th percentage").grid(row=4)
    Label(mainframe, text="min cgpa").grid(row=5)
    Label(mainframe, text="Choose a language").grid(row=6)

    e1 = Entry(mainframe)
    e2 = Entry(mainframe)
    e3 = Entry(mainframe)
    e4 = Entry(mainframe)
    e5 = Entry(mainframe)

    e1.insert(END, 'Important ! mail from TPO')
    e2.insert(END, 'we have an requirement for that you are eligible. please contact TPO cell ASAP')
    e3.insert(END, '65')
    e4.insert(END, '65')
    e5.insert(END, '5')

    e1.grid(row=1, column=1)
    e2.grid(row=2, column=1)
    e3.grid(row=3, column=1)
    e4.grid(row=4, column=1)
    e5.grid(row=5, column=1)

    choices = { 'php','python','java','c/c++','ruby','android'}
    tkvar.set('php')
     
    popupMenu = OptionMenu(mainframe, tkvar, *choices)
    popupMenu.grid(row = 6, column =1)

    sbtn = Button (mainframe, text ="Submit", padx="100px", bg="#57fc25",activebackground="#3bf902",command=get_variables).grid(row = 7,column = 1)

    sendbtn = Button (master, text ="Send Mail To ALL In Above List ", padx="130px", bg="#faff00",activebackground="#fc4625",command=send_them_all).pack(side = BOTTOM )


    scrollbar = Scrollbar(master)
    scrollbar.pack( side = RIGHT, fill=Y )
    mylist = Listbox(master, yscrollcommand = scrollbar.set , width = 100 )
    mylist.pack( side = RIGHT, fill = BOTH )
    scrollbar.config( command = mylist.yview )

    master.mainloop( )


super = Tk()

upperframe = Frame(super)
upperframe.grid(row=0, sticky=(N,W,E,S) )
upperframe.columnconfigure(0, weight = 1)
upperframe.rowconfigure(0, weight = 1)
upperframe.pack(pady = 50, padx = 100)

img = Image.open("1.gif")
tkimage = ImageTk.PhotoImage(img)

Label(super,image=tkimage).pack(side=TOP)
Label(upperframe, text="to add user click on add user button").grid(row=0)
Label(upperframe, text="to mail according to new requirment").grid(row=2)
Label(upperframe, text="to close the program").grid(row=4)

addbtn = Button (upperframe, text ="add user ", padx="100px", bg="#57fc25",activebackground="#3bf902",command=add_one).grid(row = 1)
reqbtn = Button (upperframe, text ="mail requirement", padx="100px", bg="#57fc25",activebackground="#3bf902",command=give_require).grid(row = 3)
closebtn = Button (upperframe, text ="close", padx="100px", bg="#57fc25",activebackground="#3bf902",command=super.destroy).grid(row = 5)


super.mainloop()

